from CardFramework import *

def UndoSendAccept_AllDataSet():
    """ Отмена отправки на акцептование карты клиента по всему датасету """
    NCRD = CardFramework()
    NCRD.LoginInColvir()
    data_list = NCRD.ReadDatasetFromDB('ckcdoc_data')
    for row in data_list:
        if row['ITER_CODE'] == '1':
            name_file = f'{NCRD.GetRandomNumber()}_UndoSendAccept.json'  
            UndoSendAccept(row['IDN_CARD'], name_file)
            
def UndoSendAccept(idn_card, name_file):
    """ Отмена отправки на акцептование карты клиента """
    NCRD = CardFramework()
    # Создание главной иерархии json отчета
    new_path = NCRD.GetEnviron('NEW_PATH')
    name_pict = name_file.replace("json", "png")  
    NCRD.CreateJsonFile(name_file) #Создание файла джейсон с пустым словарем в теле
    key = ["name", "description", "start"]
    value = ["Акцепт - Отмена отправки на акцептование карты", f"Отправка на акцептование карты {idn_card}", NCRD.GetDateTimeMilli()]
    abs_path = NCRD.FindAbsPathFile(name_file) # Получение абсолютного пути файла
    NCRD.AddKeyValueJson(abs_path, key, value)
    def_dict = NCRD.GetDefaultDict(abs_path)
    key_labels_suite = ["name", "value"]
    value_labels_suite = ["suite", "Модуль - БОКС/ПС"]
    NCRD.AddNestedElements(abs_path, 'labels', key_labels_suite, value_labels_suite)
    key_labels_subsuite = ["name", "value"]
    value_labels_subsuite = ["subSuite", "Операции - СКС Договора"]
    NCRD.AddNestedElements(abs_path, 'labels', key_labels_subsuite, value_labels_subsuite)
    # Начало работы скрипта автотеста
    try:   
        NCRD.TaskInput('NCRD')
        NCRD.WaitLoadWindow('frmFilterParams')
        NCRD.SetFilter(CARDIDN=idn_card) # Вставляем номер идентификатора из бд, для поиска нашей карты
        NCRD.WaitLoadWindow('NCrdList')
        but_operations = Sys.Process("COLVIR").VCLObject("NCrdList").VCLObject("btnRunOperation") # Определение контекстного меню с опреациямии
        but_operations.Click()
        NCRD.FindNeedOperation("Отменить отправку") 
        NCRD.ConfirmOperation("Отменить отправку")
        if Sys.Process("COLVIR").WaitVCLObject("RptToPrintList", 10000).Exists:
            close_btn = NCRD.FindChildField("RptToPrintList", "Name", "VCLObject('btnClose')")
            close_btn.Click()
            NCRD.CheckOperEndWindow()
        else:
            print("Объект RptToPrintList не найден, продолжаем выполнение теста...")
        status_crd = NCRD.GetGridDataFields("NCrdList", "NAME", "CODE", "ACC_CODE") # Получаем статус карты для дальнейшей проверки
        if status_crd[0].replace("\'", '') == 'Отменитьотправку':
            # Отчетность
            NCRD.AllureReportTemplate(abs_path, name_file, "Отмена отправки на акцептование карты клиента", "passed", {"message": f"Карта с идентификатором {status_crd[1]} был отозван с акцепта"},
                                         'VCLObject("NCrdList")', "Выполена отмена отправки", new_path, "passed", 1, 1, rm = True)
            # --------------------------------------------------------------------------------------------------------------------------
            Log.Checkpoint(f'Карта с идентификатором {status_crd[1]} в состоянии {status_crd[0]}')
        else:
            # Отчетность
            NCRD.AllureReportTemplate(abs_path, name_file, "Отправка на акцептование карты клиента", "failed", {"message": f"Операция отмены отправки на акпецт не выполнена"},
                                         'VCLObject("NCrdList")', "Ошибка, не отправлено", new_path, "failed", 1, 1, rm = True)
            # --------------------------------------------------------------------------------------------------------------------------
            Log.Warning(f'Операция {status_crd[0]} не выполнена')
        Sys.Process("COLVIR").VCLObject("NCrdList").Close()
        return acc_crd
    except Exception as error:
        Log.Warning(f"Error: {error}")
        # Дополнительные действия по обработке ошибки
        NCRD.AllureReportTemplate(abs_path, name_file, "Возникла непредвиденная ошибка", "failed", {"message": f"Возникла непредвиденная ошибка"},
                                     'desktop', None, new_path, "failed", 2, 1, rm=True) 
